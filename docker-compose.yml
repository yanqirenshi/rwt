version: '3'
services:

  #####
  ##### Neo4j
  #####
  rwt-neo4j:
    image: neo4j
    container_name: rwt-neo4j
    restart: always
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - d:/var/rwt/neo4j/data:/data


  #####
  ##### PostgreSQL
  #####   https://qiita.com/mabubu0203/items/5cdff1caf2b024df1d95
  #####
  rwt-postgres:
    image: postgres
    container_name: rwt-postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - d:/var/rwt/postgres/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    hostname: postgres
    restart: always
    user: root

  rwt-pgadmin4:
    image: dpage/pgadmin4:3.3
    container_name: pgadmin4
    ports:
      - 80:80
    volumes:
      - d:/var/rwt/pgadmin:/var/lib/pgadmin/storage
    environment:
      PGADMIN_DEFAULT_EMAIL: root
      PGADMIN_DEFAULT_PASSWORD: root
    hostname: pgadmin4
    restart: always


  #####
  ##### Api
  #####
  rwt-api:
    container_name: rwt-api
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - 8080:8080


  #####
  ##### Node
  #####
  rwt-web:
    container_name: rwt-web
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.web
    volumes:
      - ./:/usr/src/app
    command: sh -c "cd web && npm install && npm start"
    ports:
      - "3000:3000"
    stdin_open: true # https://teratail.com/questions/249875
