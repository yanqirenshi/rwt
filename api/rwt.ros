#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '() :silent t)
  )

(defpackage :ros.script.rwt.3813293814
  (:use :cl))
(in-package :ros.script.rwt.3813293814)

;; SBCL
(setf sb-impl::*default-external-format* :utf-8)
(setf sb-alien::*default-c-string-external-format* :utf-8)


;; ASDF
(push #P"~/.asdf/" asdf:*central-registry*)

;; load libs
(ql:quickload '(woo clack rwt.api))


;;;;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;  Variables
;;;;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defvar *svr*   nil)
(defvar *balus* nil)


;;;;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;  Operators
;;;;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defun ensure-port (port)
  (parse-integer (or port "8080")))

(defun ensure-address (address)
  (or address "0.0.0.0"))

(defun balus (env)
  (declare (ignore env))
  (progn (setf *balus* t)
         (list 201
               (list :content-type "text/plain")
               (list "あ～あ～目がぁ～"))))

(defun start-server ()
  (setf *svr*
        (clack:clackup
         (lack:builder
          :session
          (:static :path "/public/" :root #P"/static-files/")
          (:mount "/api/v1" rwt.api.router:*v1*)
          (:mount "/balus" #'balus)
          rwt.api.router:*terminator*)
         :port    (ensure-port    (uiop:getenv "PORT"))
         :address (ensure-address (uiop:getenv "ADDRESS")))))


;;;;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;
;;;;;   Main
;;;;;
;;;;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defun gc-loop ()
  (do ((counter 0 (1+ counter))
       (gc-point 88888888))
      (*balus* (clack:stop *svr*))
    (sleep 1)
    (when (= counter gc-point)
      (setf counter 0)
      (sb-ext:gc))))

(defun main (&rest argv)
  (declare (ignorable argv))
  (start-server)
  (gc-loop))

;;; vim: set ft=lisp lisp:
